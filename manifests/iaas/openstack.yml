---
params:
  openstack_auth_url: (( param "What is the OpenStack Auth URL?" ))
  openstack_username: (( vault meta.vault "/openstack/creds:username" ))
  openstack_password: (( vault meta.vault "/openstack/creds:password" ))
  openstack_domain:   (( vault meta.vault "/openstack/creds:domain" ))
  openstack_project:  (( vault meta.vault "/openstack/creds:project" ))
  openstack_region:   (( param "What is the OpenStack Region?" ))
  openstack_ssh_key:  (( param "What is the OpenStack SSH Key Name?" ))
  openstack_default_security_groups: (( param "What OpenStack SGs are applied to VMs by default?" ))

meta:
  registry_iaas:
    openstack:
      .: (( inject instance_groups.bosh.jobs.openstack_cpi.properties.openstack ))
  director_cpi_job: openstack_cpi

instance_groups:
- name: bosh
  jobs:
  - name: openstack_cpi
    release: bosh-openstack-cpi
    properties:
      openstack:
        auth_url: (( grab params.openstack_auth_url ))
        username: (( grab params.openstack_username ))
        api_key: (( grab params.openstack_password ))
        domain: (( grab params.openstack_domain ))
        project: (( grab params.openstack_project ))
        region: (( grab params.openstack_region ))
        default_key_name: (( grab params.openstack_ssh_key ))
        default_security_groups: (( grab params.openstack_default_security_groups ))
        human_readable_vm_names: true
      blobstore:
        .: (( inject instance_groups.bosh.jobs.blobstore.properties.blobstore ))
      env:
        .: (( inject instance_groups.bosh.jobs.director.properties.env ))
      nats:
        .: (( inject instance_groups.bosh.jobs.nats.properties.nats ))
      agent:
        mbus: (( grab instance_groups.bosh.jobs.director.properties.agent.mbus ))
      registry:
        .: (( inject meta.registry ))
      ntp: (( grab instance_groups.bosh.jobs.director.properties.ntp ))

releases:
- name: bosh-openstack-cpi
  .:    (( inject meta.releases.bosh-openstack-cpi ))
