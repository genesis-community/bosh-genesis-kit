---
bosh-variables:
  postgres_password: (( prune )) # password now comes from vault

meta:
  registry_db:
    adapter:  (( vault meta.vault "/db/bosh:scheme"   ))
    user:     (( vault meta.vault "/db/bosh:username" ))
    password: (( vault meta.vault "/db/bosh:password" ))
    host:     (( vault meta.vault "/db/bosh:hostname" ))
    port:     (( vault meta.vault "/db/bosh:port"     ))
    database: (( vault meta.vault "/db/bosh:database" ))
    tls:
      enabled: true
      cert:
        ca:   (( vault meta.vault "/db/bosh:ca" ))

instance_groups:
- name: bosh
  properties:
    director: 
      db:
        adapter:  (( vault meta.vault "/db/bosh:scheme"   ))
        user:     (( vault meta.vault "/db/bosh:username" ))
        password: (( vault meta.vault "/db/bosh:password" ))
        host:     (( vault meta.vault "/db/bosh:hostname" ))
        port:     (( vault meta.vault "/db/bosh:port"     ))
        database: (( vault meta.vault "/db/bosh:database" ))
        tls:
          enabled: true
          cert:
            ca:   (( vault meta.vault "/db/bosh:ca" ))
    registry:
      db: (( grab meta.registry_db ))

  jobs:
  - name: credhub
    properties:
      credhub:
        data_storage:
          type:     (( vault meta.vault "/db/credhub:scheme"   ))
          username: (( vault meta.vault "/db/credhub:username" ))
          password: (( vault meta.vault "/db/credhub:password" ))
          host:     (( vault meta.vault "/db/credhub:hostname" ))
          port:     (( vault meta.vault "/db/credhub:port"     ))
          database: (( vault meta.vault "/db/credhub:database" ))
          require_tls: true
          tls_ca:   (( vault meta.vault "/db/credhub:ca" ))

  - name: bbr-credhubdb
    properties:
      credhub:
        data_storage:
          type:     (( vault meta.vault "/db/credhub:scheme"   ))
          username: (( vault meta.vault "/db/credhub:username" ))
          password: (( vault meta.vault "/db/credhub:password" ))
          host:     (( vault meta.vault "/db/credhub:hostname" ))
          port:     (( vault meta.vault "/db/credhub:port"     ))
          database: (( vault meta.vault "/db/credhub:database" ))
          require_tls: true
          tls_ca:   (( vault meta.vault "/db/credhub:ca" ))

  - name: uaa
    properties:
      uaa:
        ca_certs:
          - (( append ))
          - (( grab meta.vault "/db/uaa:ca" ))
      uaadb:
        address: (( vault meta.vault "/db/uaa:hostname" ))
        port:    (( vault meta.vault "/db/uaa:port"     ))
        tls: enabled
        databases:
          - (( replace ))
          - name: (( vault meta.vault "/db/uaa:database" ))
            tag: uaa
        roles:
          - (( delete "postgres" ))
          - (( delete "mysql" ))
          - (( append ))
          - name:     (( vault meta.vault "/db/uaa:username" ))
            password: (( vault meta.vault "/db/uaa:password" ))
            tag: admin
        db_scheme:    (( vault meta.vault "/db/uaa:scheme"   ))

  - name: bbr-uaadb
    properties:
      uaa:
        ca_certs:
          - (( append ))
          - (( vault meta.vault "/db/uaa:ca" ))
      uaadb:
        address: (( vault meta.vault "/db/uaa:hostname" ))
        port:    (( vault meta.vault "/db/uaa:port"     ))
        tls: enabled
        databases:
          - (( replace ))
          - name: (( vault meta.vault "/db/uaa:database" ))
            tag: uaa
        roles:
          - (( delete "postgres" ))
          - (( delete "mysql" ))
          - (( append ))
          - name:     (( vault meta.vault "/db/uaa:username" ))
            password: (( vault meta.vault "/db/uaa:password" ))
            tag: admin
        db_scheme: (( vault meta.vault "/db/uaa:scheme" ))

