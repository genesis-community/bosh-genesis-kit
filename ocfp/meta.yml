---
meta:
  ocfp:
    env:
      scale: (( grab kit.scale || params.ocfp_env_scale || "dev" ))

    vault:
      config_prefix: (( grab params.ocfp_vault_config_prefix || "config/" ))
      config:        (( concat genesis.ocfp_config_mount genesis.ocfp_env ))

    certs:
      trusted:
        - (( append ))
        # TODO: Just safe set empty ca for now???
        - (( vault genesis.secrets_mount "certs/org:ca" )) # Organization CA, if exists
        - (( vault genesis.secrets_mount "certs/dbs:ca" )) # External Databases CA

    bosh:
      ip:        (( vault meta.ocfp.vault.config "/vpc/subnets/ocfp-0/reserved-ips:bosh_ip" )) # Shouldn't this just be ocfp-0:ip ???  instead of /bosh/net/bosh:ip
      gateway:   (( vault meta.ocfp.vault.config "/vpc/subnets/ocfp-0:gateway" )) # Shouldn't this just be ocfp-0:gateway ??? instead of /bosh/net/bosh:gateway
      cidr:      (( vault meta.ocfp.vault.config "/vpc/subnets/ocfp-0:cidr_block" ))
      subnet_id: (( vault meta.ocfp.vault.config "/vpc/subnets/ocfp-0:id" ))
      region:    (( vault meta.ocfp.vault.config "/vpc:region" ))

      dns:
        - (( vault meta.ocfp.vault.config "/vpc:dns" ))

      # TODO: Didn't do keys yet...
      key_name:    (( vault meta.ocfp.vault.config "/bosh/keys/bosh:name" ))
      private_key: (( vault meta.ocfp.vault.config "/bosh/keys/bosh:private" ))

      s3:
        bucket_name: (( vault meta.ocfp.vault.config "/bosh/blobstores/bosh:name" ))
        region:      (( vault meta.ocfp.vault.config "/bosh/blobstores/bosh:region" ))

      iam:
        s3: # For Blobstore
          # TODO: fetch from blobstore definition as above???
          access_key:  (( vault meta.ocfp.vault.config "/bosh/iam/s3:access_key" ))
          secret_key:  (( vault meta.ocfp.vault.config "/bosh/iam/s3:secret_key" ))

      disk_size:       (( grab params.disk_size || 65536 ))
      disk_encryption: true # Default to encrypted at rest
