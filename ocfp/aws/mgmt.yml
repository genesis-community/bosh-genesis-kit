params:
  aws_ebs_encryption: true # Default to encrypted at rest
  persistent_disk_size: 32768

  # TODO: Q: How can we bypass the param queries if ocfp feature?
  # NOTE: The below are only to appease the merging of param items.
  aws_subnet_id: (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:id" ))
  aws_key_name:  (( vault meta.vault.tf_path "/keys/bosh:keypair_name" ))
  aws_region:    (( vault meta.vault.tf_path "/iaas/region:name" ))
  aws_default_sgs: 
  - (( vault meta.vault.tf_path "/iaas/sgs/default:id" ))
  - (( vault meta.vault.tf_path "/iaas/sgs/mgmt:id" ))

  static_ip:       (( vault meta.vault.tf_path "/net/bosh:ip" ))
  default_gateway: (( vault meta.vault.tf_path "/net/bosh:gateway" ))
  subnet_addr:     (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:cidr_block" )) 
  aws_subnet_id:   (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:cidr_block" )) 

  bosh_network:   (( concat meta.env.name "-bosh" ))
  bosh_vm_type:   (( concat "bosh-" meta.env.scale ))
  bosh_disk_pool: (( concat "bosh-" meta.env.scale ))

  availability_zones: # For mgmt (create-env) it's the subnet 0's AZ
    - (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:availability_zone" ))

bosh-variables:
  az:        (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:availability_zone" )) # ^^^
  region:    (( vault meta.vault.tf_path "/iaas/region:name" ))
  subnet_id: (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:id" ))

  internal_cidr: (( vault meta.vault.tf_path "/iaas/subnets/ocfp/0:cidr_block" )) 
  internal_ip:   (( vault meta.vault.tf_path "/net/bosh:ip" ))
  internal_gw:   (( vault meta.vault.tf_path "/net/bosh:gateway" ))
  internal_dns: 
  - (( vault meta.vault.tf_path "/net/bosh:dns" ))

  default_key_name: (( vault meta.vault.tf_path "/keys/bosh:keypair_name" ))

  default_security_groups:
  - (( vault meta.vault.tf_path "/iaas/sgs/default:id" ))
  - (( vault meta.vault.tf_path "/iaas/sgs/mgmt:id" ))
  
  private_key: (( vault meta.vault.tf_path "/keys/bosh:private" ))
  access_key_id: (( vault meta.vault.tf_path "/iam/bosh:access_key" ))
  secret_access_key: (( vault meta.vault.tf_path "/iam/bosh:secret_key" ))

  s3-bucket-name: (( vault meta.vault.tf_path "/blobstores/bosh:name" ))
  s3-region: (( vault meta.vault.tf_path "/blobstores/bosh:region" ))
  s3-access-key-id: (( vault meta.vault.tf_path "/iam/s3:access_key" ))
  s3-secret-access-key: (( vault meta.vault.tf_path "/iam/s3:secret_key" ))

  disk_size: (( grab params.persistent_disk_size ))

  # TODO: Bosh >274 mbus will change
  mbus_bootstrap_password: (( vault meta.vault "/mbus_bootstrap:password" ))
  mbus_bootstrap_ssl:
    ca: (( vault meta.vault "/ssl/ca:certificate" ))
    certificate: (( vault meta.vault "/ssl/mbus:certificate" ))
    private_key: (( vault meta.vault "/ssl/mbus:key" ))

disk_pools:
- name: disks
  disk_size: ((disk_size))

networks:
- name: default # TODO: Q: Should this be parameterized? ex: 'bosh/ocfp/...'
  subnets:
  - (( inline ))
  - cloud_properties:
      security_groups:
      - (( vault meta.vault.tf_path "/iaas/sgs/default:id" ))
      - (( vault meta.vault.tf_path "/iaas/sgs/mgmt:id" ))

