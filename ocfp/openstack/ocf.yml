---
# remove create-env specific elements
- type: remove
  path: /variables/name=mbus_bootstrap_password?

---
meta:
  ocfp:
    bosh:
      ocf:
        sgs:
          - (( vault meta.ocfp.vault.config "/vpc/sgs/default:id" ))
          # TODO: create ocf sg and re-run configure
          #- (( vault meta.ocfp.vault.config "/vpc/sgs/ocf:id" ))

params:
  os_keypair:         (( grab meta.ocfp.bosh.key_name ))
  os_region:          (( grab meta.ocfp.bosh.region ))
  os_default_sgs:     (( grab meta.ocfp.bosh.ocf.sgs ))
  static_ip:          (( grab meta.ocfp.bosh.ip ))
  default_gateway:    (( grab meta.ocfp.bosh.gateway ))
  subnet_addr:        (( grab meta.ocfp.bosh.cidr ))
  os_subnet_id:       (( grab meta.ocfp.bosh.subnet_id ))

  bosh_network:       (( concat genesis.env ".bosh.net-bosh" ))
  bosh_vm_type:       (( concat genesis.env ".bosh.vm-bosh" ))
  bosh_disk_type:     (( concat genesis.env ".bosh.disk-bosh" ))

  availability_zones:
    - ((az))

bosh-variables:
  az:                      (( concat genesis.bosh_env "-z1" ))
  region:                  (( grab meta.ocfp.bosh.region ))
  subnet_id:               (( grab meta.ocfp.bosh.subnet_id ))
  internal_cidr:           (( grab meta.ocfp.bosh.cidr ))
  internal_ip:             (( grab meta.ocfp.bosh.ip ))
  internal_gw:             (( grab meta.ocfp.bosh.gateway ))
  internal_dns:            (( grab meta.ocfp.bosh.dns ))
  default_key_name:        (( grab meta.ocfp.bosh.key_name ))
  default_security_groups: (( grab meta.ocfp.bosh.ocf.sgs ))
  private_key:             (( grab meta.ocfp.bosh.private_key ))
  s3-bucket-name:          (( grab meta.ocfp.bosh.s3.bucket_name ))
  s3-region:               (( grab meta.ocfp.bosh.s3.region ))
  s3-host:                 (( grab meta.ocfp.bosh.s3.host ))
  s3-access-key-id:        (( grab meta.ocfp.bosh.iam.s3.access_key ))
  s3-secret-access-key:    (( grab meta.ocfp.bosh.iam.s3.secret_key ))
  disk_size:               (( grab meta.ocfp.bosh.disk_size ))
