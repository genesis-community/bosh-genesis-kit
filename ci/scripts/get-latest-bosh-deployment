#!/usr/bin/env bash

set -e
set -o pipefail
export TERM=xterm-256color

header() {
  echo
  echo "================================================================================"
  echo "$1"
  echo "--------------------------------------------------------------------------------"
  echo
}

bail() {
  echo >&2 "$*  Did you misconfigure Concourse?"
  exit 2
}

test -n "${GIT_EMAIL:-}"      || bail "GIT_EMAIL must be set to an email address to use for Git commits."
test -n "${GIT_NAME:-}"       || bail "GIT_NAME must be set to something; it will be used for Git commits."

ref=$(cut -c1-8 < bosh-deployment/.git/ref)

pushd git > /dev/null

git config --global user.name  "${GIT_NAME}"
git config --global user.email "${GIT_EMAIL}"

echo "CHECKING git status"
git status

header "Synchronize with upstream bosh-deployment repo"
rm -r bosh-deployment
cp -r ../bosh-deployment .
rm -rf bosh-deployment/{ci,tests}
git diff --color=always bosh-deployment/ | cat

header "Recreate spec-test results to validate bosh-deployment"
pushd spec > /dev/null
# TODO: remove spec/{credhub,vault} if needed? because this will regenerate vault.
rm -rf results/
ginkgo -p
popd

header "Spec file changes:"
git diff --color=always spec/results/ | cat

# TODO: figure out how we can maken this less hacky
header "Bumping overlay releases"
release_name=os-conf
release_version=$( bosh int bosh-deployment/bosh.yml -o bosh-deployment/jumpbox-user.yml --path /releases/name=os-conf/version )
url=$( bosh int bosh-deployment/bosh.yml -o bosh-deployment/jumpbox-user.yml --path /releases/name=os-conf/url )
sha1=$( bosh int bosh-deployment/bosh.yml -o bosh-deployment/jumpbox-user.yml --path /releases/name=os-conf/sha1 )

cat > overlay/releases/os-conf.yml <<YML
releases:
- name: ${release_name}
  version: ${release_version}
  url: ${url}
  sha1: ${sha1}
YML

DNS=$(bosh int bosh-deployment/runtime-configs/dns.yml --path /releases)
cat > overlay/releases/bosh-dns.yml <<YML
releases:
${DNS}
YML

header "Commiting updates to git"
git add bosh-deployment
git add overlay/releases
git add spec/
git commit -m "Update to cloudfoundry/bosh-deployment@$ref"

# The following is done to ensure a clean push to the develop branch, while
# basing the input on a version that last passed the spec-tests.
https_url="$(git remote -v | grep '(fetch)' | sed -e 's/.*github.com:\(.*\) (fetch)/https:\/\/github.com\/\1/')"
git remote add live "$https_url"
git pull --rebase=merges live develop -X theirs --no-edit
git remote remove live

popd > /dev/null
