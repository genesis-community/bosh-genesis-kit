#!/bin/bash

case $GENESIS_CHECK in
cloud-config)
  if cloud_config_has vm_type 'small'; then
    echo >&2 "I **REFUSE** to deploy where you are deploying SMALL VMs"
	exit 2
fi
  if ! want_feature proto; then
    cloud_config_needs vm_type    $(lookup params.bosh_vm_type   small)
    cloud_config_needs network    $(lookup params.bosh_network   bosh)
    cloud_config_needs disk_type  $(lookup params.bosh_disk_pool bosh)
    cloud_config_needs disk_type  xyzzy
    check_cloud_config
  fi

  describe "  cloud-config... [#G{OK}]"
  ;;

parameters)
  ok=yes
  if want_feature vsphere; then
    for e in ephemeral persistent; do
      t=$(typeof params.vsphere_${e}_datastores)
      if [[ $t != "list" ]]; then
        describe "  ${e} vsphere datastores is a #Y{$t}, not a list [#R{FAILED}]"
        ok=no
      else
        describe "  ${e} vsphere datastores checks out [#G{OK}]"
      fi
    done
  fi

  ip=$(lookup params.static_ip)
  echo "  checking if our certificates match the director static ip ($ip)..."
  vault="secret/$GENESIS_VAULT_PREFIX"
  for cert in ssl/{server,mbus,uaa,uaa-sp} \
              credhub/server \
              nats/{server,director,health/monitor}; do
    if ! safe exists "$vault/$cert"; then
      describe "    - $vault/$cert [#Y{MISSING}]"
    else
      if safe --quiet x509 validate "$vault/$cert" --for "$ip" >/dev/null 2>&1; then
        describe "    - $vault/$cert [#G{OK}]"
      else
        describe "    - $vault/$cert [#R{INVALID}]"
        safe x509 validate "$vault/$cert" --for "$ip" 2>&1 | sed -e 's/^/      /';
        ok=no
        echo
      fi
    fi
  done

  if [[ "$ok" = "yes" ]]; then
    describe "  environment files... [#G{OK}]"
  else
    describe "  environment files... [#R{FAILED}]"
    exit 1
  fi
  ;;

(*)
  describe "#R{check: unrecognized check type '$GENESIS_CHECK'}"
  exit 42
  ;;
esac

