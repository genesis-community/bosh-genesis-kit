cloud_provider:
  cert:
    ca: <!{meta.vault}/ssl/ca:certificate!>
    certificate: <!{meta.vault}/ssl/mbus:certificate!>
    private_key: <!{meta.vault}/ssl/mbus:key!>
  mbus: https://mbus:<!{meta.vault}/mbus_bootstrap:password!>@10.99.0.25:6868
  properties:
    agent:
      mbus: https://mbus:<!{meta.vault}/mbus_bootstrap:password!>@0.0.0.0:6868
    aws:
      credentials_source: env_or_profile
      default_key_name: vcap@proto-aws-iam-profile-s3-blobstore
      default_security_groups: test-default-sgs
      region: test-region
    blobstore:
      path: /var/vcap/micro_bosh/data/cache
      provider: local
    env:
      http_proxy: ""
      https_proxy: ""
      no_proxy: ""
  ssh_tunnel:
    host: 10.99.0.25
    port: 22
    private_key: <!{meta.vault}/aws/ssh:private!>
    user: vcap
  template:
    name: aws_cpi
    release: bosh-aws-cpi
disk_pools:
- cloud_properties:
    type: gp2
  disk_size: 32768
  name: disks
exodus:
  netop_sshkey: <!{meta.vault}/op/net:private!>
  sysop_password: <!{meta.vault}/op/sys:password!>
instance_groups:
- instances: 1
  jobs:
  - name: bpm
    release: bpm
  - name: nats
    release: bosh
  - name: postgres-10
    release: bosh
  - name: director
    release: bosh
  - name: health_monitor
    release: bosh
  - name: uaa
    properties:
      encryption:
        active_key_label: uaa-encryption-key-1
        encryption_keys:
        - label: uaa-encryption-key-1
          passphrase: <!{meta.vault}/uaa/encryption:key!>
      login:
        saml:
          activeKeyId: uaa-saml-key-1
          keys:
            uaa-saml-key-1:
              certificate: <!{meta.vault}/ssl/uaa-sp:certificate!>
              key: <!{meta.vault}/ssl/uaa-sp:key!>
              passphrase: ""
      uaa:
        clients:
          admin:
            authorities: bosh.admin
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: <!{meta.vault}/users/admin:password!>
          bosh_cli:
            access-token-validity: 120
            authorities: uaa.none
            authorized-grant-types: password,refresh_token
            override: true
            refresh-token-validity: 86400
            scope: openid,bosh.admin,bosh.read,bosh.*.admin,bosh.*.read,bosh.teams.*.admin,bosh.teams.*.read
            secret: ""
          concourse:
            access-token-validity: 120
            authorities: bosh.admin
            authorized-grant-types: client_credentials
            override: true
            refresh-token-validity: 500
            scope: ""
            secret: <!{meta.vault}/users/concourse:password!>
          credhub-admin:
            access-token-validity: 3600
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: <!{meta.vault}/uaa/clients/credhub_admin:secret!>
          credhub_cli:
            access-token-validity: 60
            authorities: ""
            authorized-grant-types: password,refresh_token
            override: true
            refresh-token-validity: 1800
            scope: credhub.read,credhub.write
            secret: ""
          director_to_credhub:
            access-token-validity: 3600
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: <!{meta.vault}/uaa/clients/director_to_credhub:secret!>
          hm:
            authorities: bosh.admin
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: <!{meta.vault}/uaa/clients/hm:secret!>
          prometheus:
            authorities: bosh.read
            authorized-grant-types: client_credentials, refresh_token
            override: true
            scope: bosh.read
            secret: <!{meta.vault}/uaa/clients/prometheus:secret!>
          uaa_admin:
            authorities: uaa.admin
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: <!{meta.vault}/uaa/clients/uaa_admin:secret!>
        jwt:
          policy:
            active_key_id: uaa-jwt-key-1
            keys:
              uaa-jwt-key-1:
                signingKey: <!{meta.vault}/uaa/jwt:private!>
          revocable: true
        scim:
          groups:
            bosh.admin: User has admin access on any Director
            bosh.read: User has read access on any Director
            bosh.releases.upload: User can upload new releases
            bosh.stemcells.upload: User can upload new stemcells
          users:
          - groups:
            - bosh.admin
            name: admin
            password: <!{meta.vault}/users/admin:password!>
          - groups:
            - credhub.read
            - credhub.write
            name: credhub_cli_user
            password: <!{meta.vault}/uaa/users/credhub-cli:password!>
        sslCertificate: <!{meta.vault}/ssl/uaa:certificate!>
        sslPrivateKey: <!{meta.vault}/ssl/uaa:key!>
        url: https://10.99.0.25:8443
        zones:
          internal:
            hostnames:
            - 10.99.0.25
      uaadb:
        address: 127.0.0.1
        databases:
        - name: uaa
          tag: uaa
        db_scheme: postgresql
        port: 5432
        roles:
        - name: postgres
          password: <!{meta.vault}/db:password!>
          tag: admin
        tls: disabled
    release: uaa
  - name: bbr-uaadb
    properties:
      release_level_backup: true
      uaadb:
        address: 127.0.0.1
        databases:
        - name: uaa
          tag: uaa
        db_scheme: postgresql
        port: 5432
        roles:
        - name: postgres
          password: <!{meta.vault}/db:password!>
          tag: admin
    release: uaa
  - name: credhub
    properties:
      credhub:
        authentication:
          uaa:
            ca_certs:
            - <!{meta.vault}/ssl/ca:certificate!>
            url: https://10.99.0.25:8443
            verification_key: <!{meta.vault}/uaa/jwt:public!>
        authorization:
          acls:
            enabled: false
        certificates:
          concatenate_cas: true
        data_storage:
          database: credhub
          host: 127.0.0.1
          password: <!{meta.vault}/db:password!>
          port: 5432
          require_tls: false
          type: postgres
          username: postgres
        encryption:
          keys:
          - active: true
            key_properties:
              encryption_password: <!{meta.vault}/credhub/encryption:key!>
            provider_name: internal
          providers:
          - name: internal
            type: internal
        tls:
          ca: <!{meta.vault}/credhub/ca:certificate!>
          certificate: <!{meta.vault}/credhub/server:certificate!>
          private_key: <!{meta.vault}/credhub/server:key!>
    release: credhub
  - name: bbr-credhubdb
    properties:
      credhub:
        data_storage:
          database: credhub
          host: 127.0.0.1
          password: <!{meta.vault}/db:password!>
          port: 5432
          require_tls: false
          type: postgres
          username: postgres
      release_level_backup: true
    release: credhub
  - name: registry
    release: bosh
  - name: aws_cpi
    release: bosh-aws-cpi
  - name: user_add
    properties:
      persistent_homes: true
      users:
      - name: netop
        public_key: <!{meta.vault}/op/net:public!>
      - crypted_password: <!{meta.vault}/op/sys:password-crypt-sha512!>
        name: sysop
    release: os-conf
  name: bosh
  networks:
  - name: default
    static_ips:
    - 10.99.0.25
  persistent_disk_pool: disks
  properties:
    agent:
      env:
        bosh:
          blobstores:
          - options:
              access_key_id: <!{meta.vault}/blobstore/s3:access_key!>
              bucket_name: test-s3-bucket
              region: test-s3-region
              secret_access_key: <!{meta.vault}/blobstore/s3:secret_key!>
            provider: s3
          ntp:
          - 169.254.169.123
      mbus: nats://natsuser:<!{meta.vault}/nats:password!>@10.99.0.25:4222
    aws:
      credentials_source: env_or_profile
      default_key_name: vcap@proto-aws-iam-profile-s3-blobstore
      default_security_groups: test-default-sgs
      encrypted: false
      region: test-region
    blobstore:
      access_key_id: <!{meta.vault}/blobstore/s3:access_key!>
      bucket_name: test-s3-bucket
      provider: s3
      s3_region: test-s3-region
      secret_access_key: <!{meta.vault}/blobstore/s3:secret_key!>
    director:
      address: 127.0.0.1
      config_server:
        ca_cert: <!{meta.vault}/credhub/ca:certificate!>
        enabled: true
        uaa:
          ca_cert: <!{meta.vault}/ssl/ca:certificate!>
          client_id: director_to_credhub
          client_secret: <!{meta.vault}/uaa/clients/director_to_credhub:secret!>
          url: https://10.99.0.25:8443
        url: https://10.99.0.25:8844/api/
      cpi_job: aws_cpi
      db:
        adapter: postgres
        database: bosh
        host: 127.0.0.1
        listen_address: 127.0.0.1
        password: <!{meta.vault}/db:password!>
        user: postgres
      enable_dedicated_status_worker: true
      enable_nats_delivered_templates: true
      enable_post_deploy: true
      events:
        record_events: true
      flush_arp: true
      generate_vm_passwords: true
      local_dns:
        enabled: true
      name: proto-aws-iam-profile-s3-blobstore-bosh-genesis-kit
      ssl:
        cert: <!{meta.vault}/ssl/server:certificate!>
        key: <!{meta.vault}/ssl/server:key!>
      user_management:
        provider: uaa
        uaa:
          public_key: <!{meta.vault}/uaa/jwt:public!>
          url: https://10.99.0.25:8443
      workers: 4
    env:
      http_proxy: ""
      https_proxy: ""
      no_proxy: ""
    hm:
      director_account:
        ca_cert: <!{meta.vault}/ssl/ca:certificate!>
        client_id: hm
        client_secret: <!{meta.vault}/uaa/clients/hm:secret!>
        password: <!{meta.vault}/uaa/clients/hm:secret!>
        user: hm
      resurrector_enabled: true
    nats:
      address: 10.99.0.25
      password: <!{meta.vault}/nats:password!>
      tls:
        ca: <!{meta.vault}/nats/ca:certificate!>
        client_ca:
          certificate: <!{meta.vault}/nats/ca:certificate!>
          private_key: <!{meta.vault}/nats/ca:key!>
        director:
          certificate: <!{meta.vault}/nats/director:certificate!>
          private_key: <!{meta.vault}/nats/director:key!>
        health_monitor:
          certificate: <!{meta.vault}/nats/health/monitor:certificate!>
          private_key: <!{meta.vault}/nats/health/monitor:key!>
        server:
          certificate: <!{meta.vault}/nats/server:certificate!>
          private_key: <!{meta.vault}/nats/server:key!>
      user: natsuser
    postgres:
      adapter: postgres
      additional_databases:
      - uaa
      - credhub
      database: bosh
      host: 127.0.0.1
      listen_address: 127.0.0.1
      password: <!{meta.vault}/db:password!>
      user: postgres
    registry:
      address: 10.99.0.25
      db:
        adapter: postgres
        database: bosh
        host: 127.0.0.1
        password: <!{meta.vault}/db:password!>
        user: postgres
      host: 10.99.0.25
      http:
        password: <!{meta.vault}/registry:password!>
        port: 25777
        user: registry
      password: <!{meta.vault}/registry:password!>
      port: 25777
      username: registry
  resource_pool: vms
name: proto-aws-iam-profile-s3-blobstore-bosh-genesis-kit
networks:
- name: default
  subnets:
  - cloud_properties:
      security_groups: test-security-groups
      subnet: test-subnet-id
    dns: test-dns
    gateway: 10.99.0.1
    range: 10.99.0.0/16
    static:
    - 10.99.0.25
  type: manual
releases:
- name: bosh
  sha1: 3810c75c8a2ffa61adbe80809f7a361f0bcf4cd9
  url: https://s3.amazonaws.com/bosh-compiled-release-tarballs/bosh-271.0.0-ubuntu-xenial-621.71-20200422-220715-218184745-20200422220716.tgz
  version: 271.0.0
- name: bpm
  sha1: d9a22dff24a659a8f6585a600fdd7e27bf211f3d
  url: https://s3.amazonaws.com/bosh-compiled-release-tarballs/bpm-1.1.8-ubuntu-xenial-621.71-20200422-220353-760960221-20200422220355.tgz
  version: 1.1.8
- name: uaa
  sha1: 186514cb390f6be7eb39a6ce861c99b0dc87f80b
  url: https://s3.amazonaws.com/bosh-compiled-release-tarballs/uaa-74.17.0-ubuntu-xenial-621.71-20200422-215929-649183041-20200422215932.tgz
  version: 74.17.0
- name: credhub
  sha1: 479420f5ec04945b5dc76db955588bcd7603ff01
  url: https://s3.amazonaws.com/bosh-compiled-release-tarballs/credhub-2.6.0-ubuntu-xenial-621.71-20200422-215930-454454003-20200422215931.tgz
  version: 2.6.0
- name: bosh-aws-cpi
  sha1: 1a4826469e715f5595de38a15df7b7f511fbfe85
  url: https://bosh.io/d/github.com/cloudfoundry/bosh-aws-cpi-release?v=82
  version: 82
- name: os-conf
  sha1: 6946056ad69ae378cb89c9ef76daf66370a7dc6a
  url: https://bosh.io/d/github.com/cloudfoundry/os-conf-release?v=22.0.0
  version: 22.0.0
resource_pools:
- cloud_properties:
    availability_zone: test-regiona
    ephemeral_disk:
      size: 25000
      type: gp2
    iam_instance_profile: test-profile-name
    instance_type: m5.xlarge
  env:
    bosh:
      blobstores:
      - options:
          blobstore_path: /var/vcap/micro_bosh/data/cache
        provider: local
      mbus:
        cert:
          ca: <!{meta.vault}/ssl/ca:certificate!>
          certificate: <!{meta.vault}/ssl/mbus:certificate!>
          private_key: <!{meta.vault}/ssl/mbus:key!>
      ntp:
      - 169.254.169.123
      password: '*'
  name: vms
  network: default
  stemcell:
    sha1: f2b54011eb4891f86638294c9f2d8670b04e371b
    url: https://bosh-aws-light-stemcells.s3-accelerate.amazonaws.com/621.71/light-bosh-stemcell-621.71-aws-xen-hvm-ubuntu-xenial-go_agent.tgz
